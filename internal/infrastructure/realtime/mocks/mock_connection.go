// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/realtimeiface/connection.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	realtimeiface "github.com/Soyuen/go-redis-chat-server/pkg/realtimeiface"
	gomock "github.com/golang/mock/gomock"
)

// MockConnection is a mock of Connection interface.
type MockConnection struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionMockRecorder
}

// MockConnectionMockRecorder is the mock recorder for MockConnection.
type MockConnectionMockRecorder struct {
	mock *MockConnection
}

// NewMockConnection creates a new mock instance.
func NewMockConnection(ctrl *gomock.Controller) *MockConnection {
	mock := &MockConnection{ctrl: ctrl}
	mock.recorder = &MockConnectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnection) EXPECT() *MockConnectionMockRecorder {
	return m.recorder
}

// HandleConnection mocks base method.
func (m *MockConnection) HandleConnection(conn realtimeiface.WSConn, channel string, onMessage func([]byte) *realtimeiface.Message, onClose func()) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleConnection", conn, channel, onMessage, onClose)
}

// HandleConnection indicates an expected call of HandleConnection.
func (mr *MockConnectionMockRecorder) HandleConnection(conn, channel, onMessage, onClose interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleConnection", reflect.TypeOf((*MockConnection)(nil).HandleConnection), conn, channel, onMessage, onClose)
}
