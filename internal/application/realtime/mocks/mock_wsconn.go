// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Soyuen/go-redis-chat-server/internal/application/realtime (interfaces: WSConn)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWSConn is a mock of WSConn interface.
type MockWSConn struct {
	ctrl     *gomock.Controller
	recorder *MockWSConnMockRecorder
}

// MockWSConnMockRecorder is the mock recorder for MockWSConn.
type MockWSConnMockRecorder struct {
	mock *MockWSConn
}

// NewMockWSConn creates a new mock instance.
func NewMockWSConn(ctrl *gomock.Controller) *MockWSConn {
	mock := &MockWSConn{ctrl: ctrl}
	mock.recorder = &MockWSConnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWSConn) EXPECT() *MockWSConnMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockWSConn) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockWSConnMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockWSConn)(nil).Close))
}

// ReadMessage mocks base method.
func (m *MockWSConn) ReadMessage() (int, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessage")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadMessage indicates an expected call of ReadMessage.
func (mr *MockWSConnMockRecorder) ReadMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessage", reflect.TypeOf((*MockWSConn)(nil).ReadMessage))
}

// WriteMessage mocks base method.
func (m *MockWSConn) WriteMessage(arg0 int, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessage indicates an expected call of WriteMessage.
func (mr *MockWSConnMockRecorder) WriteMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessage", reflect.TypeOf((*MockWSConn)(nil).WriteMessage), arg0, arg1)
}
