// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Soyuen/go-redis-chat-server/internal/application/realtime (interfaces: ClientFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	realtime "github.com/Soyuen/go-redis-chat-server/internal/application/realtime"
	gomock "github.com/golang/mock/gomock"
)

// MockClientFactory is a mock of ClientFactory interface.
type MockClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockClientFactoryMockRecorder
}

// MockClientFactoryMockRecorder is the mock recorder for MockClientFactory.
type MockClientFactoryMockRecorder struct {
	mock *MockClientFactory
}

// NewMockClientFactory creates a new mock instance.
func NewMockClientFactory(ctrl *gomock.Controller) *MockClientFactory {
	mock := &MockClientFactory{ctrl: ctrl}
	mock.recorder = &MockClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientFactory) EXPECT() *MockClientFactoryMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *MockClientFactory) New(arg0 realtime.WSConn) realtime.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0)
	ret0, _ := ret[0].(realtime.Client)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockClientFactoryMockRecorder) New(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockClientFactory)(nil).New), arg0)
}
