// Code generated by MockGen. DO NOT EDIT.
// Source: internal/presenter/message_presenter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	chat "github.com/Soyuen/go-redis-chat-server/internal/domain/chat"
	realtimeiface "github.com/Soyuen/go-redis-chat-server/pkg/realtimeiface"
	gomock "github.com/golang/mock/gomock"
)

// MockMessagePresenterInterface is a mock of MessagePresenterInterface interface.
type MockMessagePresenterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessagePresenterInterfaceMockRecorder
}

// MockMessagePresenterInterfaceMockRecorder is the mock recorder for MockMessagePresenterInterface.
type MockMessagePresenterInterfaceMockRecorder struct {
	mock *MockMessagePresenterInterface
}

// NewMockMessagePresenterInterface creates a new mock instance.
func NewMockMessagePresenterInterface(ctrl *gomock.Controller) *MockMessagePresenterInterface {
	mock := &MockMessagePresenterInterface{ctrl: ctrl}
	mock.recorder = &MockMessagePresenterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessagePresenterInterface) EXPECT() *MockMessagePresenterInterfaceMockRecorder {
	return m.recorder
}

// Format mocks base method.
func (m *MockMessagePresenterInterface) Format(msg *chat.Message) *realtimeiface.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Format", msg)
	ret0, _ := ret[0].(*realtimeiface.Message)
	return ret0
}

// Format indicates an expected call of Format.
func (mr *MockMessagePresenterInterfaceMockRecorder) Format(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Format", reflect.TypeOf((*MockMessagePresenterInterface)(nil).Format), msg)
}
