// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Soyuen/go-redis-chat-server/internal/domain/chat (interfaces: ChatMemberRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChatMemberRepository is a mock of ChatMemberRepository interface.
type MockChatMemberRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChatMemberRepositoryMockRecorder
}

// MockChatMemberRepositoryMockRecorder is the mock recorder for MockChatMemberRepository.
type MockChatMemberRepositoryMockRecorder struct {
	mock *MockChatMemberRepository
}

// NewMockChatMemberRepository creates a new mock instance.
func NewMockChatMemberRepository(ctrl *gomock.Controller) *MockChatMemberRepository {
	mock := &MockChatMemberRepository{ctrl: ctrl}
	mock.recorder = &MockChatMemberRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChatMemberRepository) EXPECT() *MockChatMemberRepositoryMockRecorder {
	return m.recorder
}

// AddUserToRoom mocks base method.
func (m *MockChatMemberRepository) AddUserToRoom(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUserToRoom", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUserToRoom indicates an expected call of AddUserToRoom.
func (mr *MockChatMemberRepositoryMockRecorder) AddUserToRoom(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUserToRoom", reflect.TypeOf((*MockChatMemberRepository)(nil).AddUserToRoom), arg0, arg1, arg2)
}

// GetRoomUserCount mocks base method.
func (m *MockChatMemberRepository) GetRoomUserCount(arg0 context.Context, arg1 string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoomUserCount", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomUserCount indicates an expected call of GetRoomUserCount.
func (mr *MockChatMemberRepositoryMockRecorder) GetRoomUserCount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomUserCount", reflect.TypeOf((*MockChatMemberRepository)(nil).GetRoomUserCount), arg0, arg1)
}

// GetRoomUserList mocks base method.
func (m *MockChatMemberRepository) GetRoomUserList(arg0 context.Context, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoomUserList", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomUserList indicates an expected call of GetRoomUserList.
func (mr *MockChatMemberRepositoryMockRecorder) GetRoomUserList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomUserList", reflect.TypeOf((*MockChatMemberRepository)(nil).GetRoomUserList), arg0, arg1)
}

// RemoveUserFromRoom mocks base method.
func (m *MockChatMemberRepository) RemoveUserFromRoom(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUserFromRoom", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveUserFromRoom indicates an expected call of RemoveUserFromRoom.
func (mr *MockChatMemberRepositoryMockRecorder) RemoveUserFromRoom(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUserFromRoom", reflect.TypeOf((*MockChatMemberRepository)(nil).RemoveUserFromRoom), arg0, arg1, arg2)
}
